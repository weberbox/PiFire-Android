plugins {
    id 'com.android.application'
    id 'com.google.gms.google-services'
    id 'com.onesignal.androidsdk.onesignal-gradle-plugin'
}

def currentTime = System.currentTimeMillis().toString()

def getGitRevCount = { ->
    try {
        def stdout = new ByteArrayOutputStream()
        exec {
            commandLine 'git', 'rev-list', '--count', 'HEAD'
            standardOutput = stdout
        }
        return stdout.toString().trim()
    }
    catch (ignored) {
        return 0.toString()
    }
}

def getGitBranch = { ->
    try {
        def stdout = new ByteArrayOutputStream()
        exec {
            commandLine 'git', 'rev-parse', '--abbrev-ref', 'HEAD'
            standardOutput = stdout
        }
        return stdout.toString().trim()
    }
    catch (ignored) {
        return 'Unknown'
    }
}

def vMajor = 1
def vMinor = 5
def vPatch = 4
def vBuild = 0
def isBeta = false

android {
    compileSdk 33

    defaultConfig {
        applicationId "com.weberbox.pifire"
        minSdk 24
        targetSdk 33
        versionCode vMajor * 1000000 + vMinor * 10000 + vPatch * 100 + vBuild
        versionName "${vMajor}.${vMinor}.${vPatch}${isBeta ? "-dev" + vBuild : ""}"

        javaCompileOptions {
            annotationProcessorOptions {
                arguments += ["room.schemaLocation": "$projectDir/schemas".toString()]
            }
        }
    }

    buildTypes {
        release {
            manifestPlaceholders = [appName: "PiFire", environment: "production"]
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
            buildConfigField "String", "BUILD_TIME", "\"${currentTime}\""
            buildConfigField "String", "GIT_BRANCH", "\"${getGitBranch}\""
            buildConfigField "String", "GIT_REV", "\"${getGitRevCount}\""
            buildConfigField "boolean", "IS_BETA", "${isBeta}"
        }
        debug {
            manifestPlaceholders = [appName: "PiFire Debug", environment: "debug"]
            applicationIdSuffix ".debug"
            debuggable true
            buildConfigField "String", "BUILD_TIME", "\"${currentTime}\""
            buildConfigField "String", "GIT_BRANCH", "\"${getGitBranch}\""
            buildConfigField "String", "GIT_REV", "\"${getGitRevCount}\""
            buildConfigField "boolean", "IS_BETA", "${isBeta}"
        }
    }

    flavorDimensions "type", "version", "update"
    productFlavors {
        nonfirebase {
            dimension "version"
            buildConfigField("boolean", "IS_ONESIGNAL", "false")
            ext.useGoogleGcm = false
        }
        firebase {
            dimension "version"
            buildConfigField("boolean", "IS_ONESIGNAL", "true")
            ext.useGoogleGcm = true
        }
        dev {
            dimension "type"
        }
        github {
            dimension "type"
        }
        playstore {
            dimension "type"
        }
        compile {
            dimension "type"
        }
        inapp {
            dimension "update"
        }
        updater {
            dimension "update"
        }
    }

    variantFilter { variant ->
        def names = variant.flavors*.name
        if (names.contains("dev") && names.contains("nonfirebase") ||
                names.contains("dev") && names.contains("inapp") ||
                names.contains("playstore") && names.contains("nonfirebase") ||
                names.contains("playstore") && names.contains("updater") ||
                names.contains("github") && names.contains("playstore") ||
                names.contains("github") && names.contains("inapp") ||
                names.contains("compile") && names.contains("playstore") ||
                names.contains("compile") && names.contains("firebase") ||
                names.contains("compile") && names.contains("inapp")) {
            setIgnore(true)
        }
    }

    compileOptions {
        coreLibraryDesugaringEnabled true
        sourceCompatibility JavaVersion.VERSION_11
        targetCompatibility JavaVersion.VERSION_11
    }

    buildFeatures {
        viewBinding true
        dataBinding true
    }
    namespace 'com.weberbox.pifire'

    applicationVariants.all { variant ->
        def appName
        if (project.hasProperty("applicationName")) {
            appName = applicationName
        } else {
            appName = parent.name.toLowerCase()
        }
        def dimension_one = variant.productFlavors[0].name
        def dimension_two = variant.productFlavors[1].name
        def dimension_three = variant.productFlavors[2].name
        def buildType = variant.buildType.name
        def version = variant.versionName

        variant.outputs.all { output ->
            outputFileName = "${appName}-${dimension_one}-${dimension_two}-${dimension_three}-" +
                    "${buildType}${version}.apk"
        }
    }

    if(project.hasProperty("pifire.signing")
            && new File(project.property("pifire.signing") + ".gradle").exists()) {
        apply from: project.property("pifire.signing") + ".gradle"
    }

    if(project.hasProperty("pifire.signing.linux")
            && new File(project.property("pifire.signing.linux") + ".gradle").exists()) {
        apply from: project.property("pifire.signing.linux") + ".gradle"
    }
}

dependencies {
    def room_version = "2.4.3"
    def sentry_version = "6.5.0"

    implementation 'androidx.appcompat:appcompat:1.5.1'
    implementation 'com.google.android.material:material:1.6.1'
    implementation 'androidx.constraintlayout:constraintlayout:2.1.4'
    implementation 'com.google.code.gson:gson:2.8.7'
    implementation 'androidx.core:core-splashscreen:1.0.0'
    implementation 'androidx.lifecycle:lifecycle-livedata-ktx:2.5.1'
    implementation 'androidx.lifecycle:lifecycle-viewmodel-ktx:2.5.1'
    implementation 'androidx.lifecycle:lifecycle-extensions:2.2.0'
    implementation 'androidx.navigation:navigation-fragment-ktx:2.5.2'
    implementation 'androidx.navigation:navigation-ui-ktx:2.5.2'
    implementation 'androidx.preference:preference:1.2.0'
    implementation 'androidx.recyclerview:recyclerview:1.2.1'
    implementation 'androidx.viewpager2:viewpager2:1.1.0-beta01'
    implementation 'androidx.security:security-crypto:1.0.0'
    implementation 'com.pixplicity.easyprefs:EasyPrefs:1.10.0'
    implementation 'com.journeyapps:zxing-android-embedded:4.2.0'
    implementation 'nl.joery.animatedbottombar:library:1.1.0'
    implementation 'com.github.PhilJay:MPAndroidChart:v3.1.0'
    implementation 'com.quiph.ui:recyclerviewfastscroller:1.0.0'
    implementation "io.sentry:sentry-android:$sentry_version"
    implementation "io.sentry:sentry-android-fragment:$sentry_version"
    implementation "io.sentry:sentry-android-timber:$sentry_version"
    implementation 'com.jakewharton.timber:timber:5.0.1'
    implementation 'com.github.discord:OverlappingPanels:0.1.5'
    implementation 'com.github.yalantis:ucrop:2.2.7'
    implementation 'io.github.ParkSangGwon:tedpermission-normal:3.3.0'
    implementation "com.github.skydoves:androidveil:1.1.2"
    implementation 'com.github.tapadoo:alerter:7.2.4'
    implementation 'me.zhanghai.android.materialratingbar:library:1.4.0'
    implementation 'com.github.bumptech.glide:glide:4.12.0'
    implementation 'com.github.acefalobi:android-stepper:0.2.2'
    implementation 'com.airbnb.android:lottie:4.2.1'
    implementation 'com.squareup.okhttp3:okhttp:4.9.3'
    implementation "androidx.room:room-common:$room_version"
    implementation "androidx.room:room-runtime:$room_version"
    implementation 'com.github.weberbox:changeloglib:3.1.1'
    implementation 'net.yslibrary.keyboardvisibilityevent:keyboardvisibilityevent:3.0.0-RC3'
    implementation 'com.github.MikeOrtiz:TouchImageView:3.1.1'
    implementation 'com.intuit.sdp:sdp-android:1.1.0'
    implementation 'com.intuit.ssp:ssp-android:1.1.0'
    annotationProcessor "androidx.room:room-compiler:$room_version"
    annotationProcessor 'com.github.bumptech.glide:compiler:4.12.0'
    firebaseImplementation platform('com.google.firebase:firebase-bom:29.1.0')
    firebaseImplementation 'com.google.firebase:firebase-messaging'
    firebaseImplementation 'com.onesignal:OneSignal:[4.0.0, 4.99.99]'
    inappImplementation 'com.google.android.play:app-update:2.0.0'
    inappImplementation 'com.google.firebase:firebase-config:21.2.0'
    inappImplementation 'com.google.firebase:firebase-analytics:21.2.0'
    implementation ('io.socket:socket.io-client:2.0.1') {
        exclude group: 'org.json', module: 'json'
    }
    //noinspection GradleDependency
    coreLibraryDesugaring 'com.android.tools:desugar_jdk_libs:1.1.5'

    afterEvaluate {
        for (flavor in android.productFlavors) {
            if (flavor.name.contains("firebase")) {
                tasks.matching {
                    it.name.contains('GoogleServices') && it.name.contains(flavor.name.capitalize())
                }*.enabled = flavor.ext.useGoogleGcm
            }
        }
    }
}